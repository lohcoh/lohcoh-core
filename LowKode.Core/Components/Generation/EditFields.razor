@using LowKode.Core.Metadata
@using LowKode.Core.Configuration
@using Microsoft.AspNetCore.Components.Forms
@namespace LowKode.Core.Components
@inject ILowkoderService lowkoder
@implements IDisposable

@{
    using (var outerScope = lowkoder.CreateScope(site))
    {
        foreach (var property in modelMetadata.Properties)
        {
            using (var propertyScope = lowkoder.CreateScope())
            {
                propertyScope.Context.ComponentSiteSpecification.ModelMember = property.ToMemberPath();
                @ChildContent
            }
        }
    }
}


@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public Type TModel { get; set; }

    [CascadingParameter]
    EditContext EditContext { get; set; }

    TypeDescriptor modelMetadata;
    IComponentSite site;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        site = lowkoder.CreateSite();

        if (EditContext == null)
        {
            throw new InvalidOperationException("No EditContext found");
        }

        if (TModel == null)
        {
            TModel = EditContext.Model.GetType();
        }

        modelMetadata = site.Metadata.ForSystemType(TModel);

        site.Context.ComponentSiteSpecification.Model = EditContext.Model;
        site.Context.ComponentSiteSpecification.ModelType = modelMetadata;

    }

    public void Dispose()
    {
        if (site != null) site.Dispose();
    }
}
