@using LowKode.Core.Metadata
@using Microsoft.AspNetCore.Components.Forms
@namespace LowKode.Core.Components
@inject ILowKodeMetaService lkMeta
@inject ILowKodeComponentService lkComponents


@foreach (var property in properties)
{
    var fieldInfo = new EditFieldModel()
    {
        Metadata = property,
        EditComponent = lkComponents.Create(typeof(Editor), modelType, property.PropertyInfo)
    };
    @FieldTemplate(fieldInfo);
}

@code {

    [Parameter]
    public RenderFragment<EditFieldModel> FieldTemplate { get; set; }

    [CascadingParameter]
    EditContext CurrentEditContext { get; set; }

    IEnumerable<IPropertyMetadata> properties { get; set; }
    Type modelType;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (CurrentEditContext == null)
        {
            throw new InvalidOperationException($"{nameof(EditFields)} requires a cascading " +
                $"parameter of type {nameof(EditContext)}. For example, you can use {nameof(EditFields)} " +
                $"inside an EditForm.");
        }

        modelType = CurrentEditContext.Model.GetType();
        properties = lkMeta.GetMetadataForType(modelType).Properties;
    }

}
