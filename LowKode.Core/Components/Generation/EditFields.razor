@using LowKode.Core.Configuration
@using LowKode.Core.Metadata
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Rendering
@using System
@namespace LowKode.Core.Components

    @foreach (var property in modelMetadata.Properties)
    {
        <ContextContainer>
            @{
                var specification = Context.Get<SiteSpecification>();
                specification.Model = EditContext.Model;
                specification.ModelType = modelMetadata;
                specification.ModelMember = property.ToMemberPath();

                @ChildContent
            }
        </ContextContainer>
    }


@code
{
    /// <summary>
    /// Renders the properties of a form model.
    /// Can only be used with an <EditForm/> component.
    /// </summary>

    /// <summary>
    /// The template for rendering properties
    /// </summary>
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [CascadingParameter]
    EditContext EditContext { get; set; }

    [ContextParameter]
    TypeDescriptors TypeDescriptors { get; set; }

    TypeDescriptor modelMetadata;
    Type modelType;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (EditContext == null)
        {
            throw new InvalidOperationException("No EditContext found");
        }

        modelType = EditContext.Model.GetType();
        modelMetadata = TypeDescriptors.ForSystemType(modelType);
    }
   

}
