@using LowKode.Core.Metadata
@using LowKode.Core.Context
@using Microsoft.AspNetCore.Components.Forms
@namespace LowKode.Core.Components
@inject IComponentSite site


@{
    var modelMetadata = site.Metadata.ForSystemType(TModel);

    site.Context.ComponentSiteSpecification.Model = CurrentEditContext.Model;
    site.Context.ComponentSiteSpecification.ModelType = modelMetadata;

    foreach (var property in modelMetadata.Properties)
    {
        IContext fieldContext = site.CreateScope();
        fieldContext.ComponentSiteSpecification.ModelMember = new DependencyPath(property);

        @ChildContent
        
    }
    
}


@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public Type TModel { get; set; }

    [CascadingParameter]
    EditContext CurrentEditContext { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (CurrentEditContext == null)
        {
            throw new InvalidOperationException("No EditContext found");
        }

        if (TModel == null)
        {
            TModel = CurrentEditContext.Model.GetType();
        }

    }
}
