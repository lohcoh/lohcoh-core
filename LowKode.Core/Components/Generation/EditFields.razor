@using LowKode.Core.Metadata
@using LowKode.Core.Common
@using Microsoft.AspNetCore.Components.Forms
@namespace LowKode.Core.Components
@inject IComponentSite site


@{
    foreach (var property in modelMetadata.Properties)
    {
        @site.RenderWithSite(ChildContent, site => {
            site.Context.ComponentSiteSpecification.ModelMember = new DependencyPath(property);            
        })
    }    
}


@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public Type TModel { get; set; }

    [CascadingParameter]
    EditContext EditContext { get; set; }

    TypeDescriptor modelMetadata;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        if (EditContext == null)
        {
            throw new InvalidOperationException("No EditContext found");
        }

        if (TModel == null)
        {
            TModel = EditContext.Model.GetType();
        }

        modelMetadata = site.Metadata.ForSystemType(TModel);

        site.Context.ComponentSiteSpecification.Model = EditContext.Model;
        site.Context.ComponentSiteSpecification.ModelType = modelMetadata;

    }
}
