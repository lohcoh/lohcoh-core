
@using Microsoft.AspNetCore.Components
@using System
@using System.Linq
@using LowKode.Core.Metadata
@namespace LowKode.Core.Components
@typeparam TSite

@SiteComponentRenderFragment

@code
{
    /// <summary>
    /// Base class for site components.
    /// A site component is a placeholder for a 'kit' component, a 'kit' component being 
    /// a concrete implementation of site component loaded from a UI kit.
    /// A site component chooses it's associated kit component based on the site type, model type, etc.
    /// Site components use IComponentSite.Metadata.ComponentTypes to find an associated kit component.
    /// </summary>
    /// 

    [CascadingParameter]
    IComponentSite Scope { get; set; }

    RenderFragment SiteComponentRenderFragment;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        var specification= Scope.GetContext<SiteSpecification>();

        // set site type, one of: Input, Display, etc...
        specification.SiteType = typeof(TSite);

        // render 'kit' component
        var componentType = Scope.FindKitType(specification);
        SiteComponentRenderFragment = (builder) =>
        {
            builder.OpenComponent(0, componentType);
            builder.CloseComponent();
        };
    }
}
