
@using Microsoft.AspNetCore.Components
@using System
@using System.Linq
@namespace LowKode.Core.Components
@typeparam TSite

<Scope OnInit="BindModel">
    @RenderSiteComponent
</Scope>

@code
{
    /// <summary>
    /// Base class for site components.
    /// </summary>

    RenderFragment RenderSiteComponent;

    void BindModel(IComponentSite site)
    {
        var siteType= typeof(TSite);
        var specification = site.Context.ComponentSiteSpecification;
        specification.SiteType = siteType;

        var modelType = specification.ModelType;
        if (specification.ModelMember != null)
        {
            modelType = specification.ModelMember.TargetProperty.PropertyType;
        }

        var componentMapping = site.Metadata.ComponentTypes.Where(t => t.SiteType == siteType && t.ModelType == modelType).FirstOrDefault();
        if (componentMapping == null)
            componentMapping = site.Metadata.ComponentTypes.Where(t => t.SiteType == siteType && t.ModelType == null).FirstOrDefault();
        if (componentMapping == null)
            throw new Exception("No component mapping found for SiteType '" + siteType.FullName + "' and  ModelType '" + modelType.DisplayName + "'");

        var componentType = componentMapping.ComponentType;
        RenderSiteComponent = (builder) =>
        {
            builder.OpenComponent(0, componentType);
            builder.CloseComponent();
        };

    }

}
